Discord.Register("log_weapon_spawn", "Log Weapon Spawn", "logs-fakeweapon")
Discord.Register("log_spawn_entity", "Log Spawn Entity", "logs-spawnentity")


local BlacklistedProps = {
    "stt_prop_stunt_track_uturn",
    "stt_prop_stunt_track_turnice",
    "prop_gold_cont_01",
    "p_cablecar_s",
    "prop_fnclink_05crnr1",
    "xs_prop_hamburgher_wl",
    "xs_prop_plastic_bottle_wl",
    "prop_windmill_01",
    "p_spinning_anus_s",
    "stt_prop_ramp_adj_flip_m",
    "stt_prop_ramp_adj_flip_mb",
    "stt_prop_ramp_adj_flip_s",
    "stt_prop_ramp_adj_flip_sb",
    "stt_prop_ramp_adj_hloop",
    "stt_prop_ramp_adj_loop",
    "stt_prop_ramp_jump_l",
    "stt_prop_ramp_jump_m",
    "stt_prop_ramp_jump_s",
    "stt_prop_ramp_jump_xl",
    "stt_prop_ramp_jump_xs",
    "stt_prop_ramp_jump_xxl",
    "stt_prop_ramp_multi_loop_rb",
    "stt_prop_ramp_spiral_l",
    "stt_prop_ramp_spiral_l_l",
    "stt_prop_ramp_spiral_l_m",
    "stt_prop_ramp_spiral_l_s",
    "stt_prop_ramp_spiral_l_xxl",
    "stt_prop_ramp_spiral_m",
    "stt_prop_ramp_spiral_s",
    "stt_prop_ramp_spiral_xxl",
    "prop_container_01a",
    "db_apart_09_",
    "db_apart_03_",
    "prop_cj_big_boat",
    "stt_prop_stunt_track_dwslope30",
    "-145066854",
    "stt_prop_stunt_track_start",
    "stt_prop_stunt_track_slope45",
    "stt_prop_stunt_track_slope30",
    "stt_prop_stunt_track_slope15",
    "stt_prop_stunt_track_short",
    "stt_prop_stunt_track_sh45_a",
    "stt_prop_stunt_track_sh45",
    "stt_prop_stunt_track_sh30",
    "stt_prop_stunt_track_sh15",
    "stt_prop_stunt_track_otake",
    "stt_prop_stunt_track_link",
    "stt_prop_stunt_track_jump",
    "stt_prop_stunt_track_hill2",
    "stt_prop_stunt_track_hill",
    "stt_prop_stunt_track_funnel",
    "stt_prop_stunt_track_funlng",
    "stt_prop_stunt_track_fork",
    "stt_prop_stunt_track_exshort",
    "stt_prop_stunt_track_dwturn",
    "stt_prop_stunt_track_dwslope45",
    "stt_prop_stunt_track_dwslope15",
    "stt_prop_stunt_track_dwshort",
    "stt_prop_stunt_track_dwsh15",
    "stt_prop_stunt_track_dwlink_02",
    "stt_prop_stunt_track_dwlink",
    "stt_prop_stunt_track_cutout",
    "stt_prop_stunt_track_bumps",
    "stt_prop_stunt_target_small",
    "stt_prop_stunt_target",
    "stt_prop_stunt_soccer_sball",
    "stt_prop_stunt_soccer_lball",
    "stt_prop_stunt_soccer_goal",
    "stt_prop_stunt_soccer_ball",
    "stt_prop_stunt_ramp",
    "stt_prop_stunt_landing_zone_01",
    "stt_prop_stunt_jump_sb",
    "stt_prop_stunt_jump_s",
    "stt_prop_stunt_jump_mb",
    "stt_prop_stunt_jump_m",
    "stt_prop_stunt_jump_loop",
    "stt_prop_stunt_jump_lb",
    "stt_prop_stunt_jump_l",
    "stt_prop_stunt_jump45",
    "stt_prop_stunt_jump30",
    "stt_prop_stunt_jump15",
    "stt_prop_stunt_domino",
    "prop_weed_pallet",
    "hei_prop_carrier_radar_1_l1",
    "v_res_mexball",
    "prop_rock_1_a",
    "prop_rock_1_b",
    "prop_rock_1_c",
    "prop_rock_1_d",
    "prop_player_gasmask",
    "prop_rock_1_e",
    "prop_rock_1_f",
    "prop_rock_1_g",
    "prop_rock_1_h",
    "prop_test_boulder_01",
    "prop_test_boulder_02",
    "prop_test_boulder_03",
    "prop_test_boulder_04",
    "apa_mp_apa_crashed_usaf_01a",
    "ex_prop_exec_crashdp",
    "prop_flag_columbia",
    "prop_shamal_crash",
    "xm_prop_x17_shamal_crash",
    "prop_flagpole_2b",
    "prop_flagpole_2c",
    "prop_flag_canada",
    "prop_flag_canada_s",
    "prop_flag_eu",
    "prop_flag_eu_s",
    "prop_target_blue_arrow",
    "prop_target_orange_arrow",
    "prop_target_purp_arrow",
    "prop_target_red_arrow",
    "apa_prop_flag_argentina",
    "apa_prop_flag_australia",
    "apa_prop_flag_austria",
    "apa_prop_flag_belgium",
    "apa_prop_flag_brazil",
    "apa_prop_flag_canadat_yt",
    "apa_prop_flag_china",
    "apa_prop_flag_columbia",
    "apa_prop_flag_croatia",
    "apa_prop_flag_czechrep",
    "apa_prop_flag_denmark",
    "apa_prop_flag_england",
    "apa_prop_flag_eu_yt",
    "apa_prop_flag_finland",
    "apa_prop_flag_france",
    "apa_prop_flag_german_yt",
    "apa_prop_flag_hungary",
    "apa_prop_flag_ireland",
    "apa_prop_flag_israel",
    "apa_prop_flag_italy",
    "apa_prop_flag_jamaica",
    "apa_prop_flag_japan_yt",
    "apa_prop_flag_canada_yt",
    "apa_prop_flag_lstein",
    "apa_prop_flag_malta",
    "apa_prop_flag_mexico_yt",
    "apa_prop_flag_netherlands",
    "apa_prop_flag_newzealand",
    "apa_prop_flag_nigeria",
    "apa_prop_flag_norway",
    "apa_prop_flag_palestine",
    "apa_prop_flag_poland",
    "apa_prop_flag_portugal",
    "apa_prop_flag_puertorico",
    "apa_prop_flag_russia_yt",
    "apa_prop_flag_scotland_yt",
    "apa_prop_flag_script",
    "apa_prop_flag_slovakia",
    "apa_prop_flag_slovenia",
    "apa_prop_flag_southafrica",
    "apa_prop_flag_southkorea",
    "apa_prop_flag_spain",
    "apa_prop_flag_sweden",
    "apa_prop_flag_switzerland",
    "apa_prop_flag_turkey",
    "apa_prop_flag_uk_yt",
    "apa_prop_flag_us_yt",
    "apa_prop_flag_wales",
    "prop_flag_uk",
    "prop_flag_uk_s",
    "prop_flag_us",
    "prop_flag_usboat",
    "prop_flag_us_r",
    "prop_flag_us_s",
    "prop_flag_france",
    "prop_flag_france_s",
    "prop_flag_german",
    "prop_flag_german_s",
    "prop_flag_ireland",
    "prop_flag_ireland_s",
    "prop_flag_japan",
    "prop_flag_japan_s",
    "prop_flag_ls",
    "prop_flag_lsfd",
    "prop_flag_lsfd_s",
    "prop_flag_lsservices",
    "prop_flag_lsservices_s",
    "prop_flag_ls_s",
    "prop_flag_mexico",
    "prop_flag_mexico_s",
    "prop_flag_russia",
    "prop_flag_russia_s",
    "prop_flag_s",
    "prop_flag_sa",
    "prop_flag_sapd",
    "prop_flag_sapd_s",
    "prop_flag_sa_s",
    "prop_flag_scotland",
    "prop_flag_scotland_s",
    "prop_flag_sheriff",
    "prop_flag_sheriff_s",
    "prop_flag_uk",
    "prop_flag_us",
    "prop_flag_usboat",
    "prop_flag_us_r",
    "prop_flag_us_s",
    "prop_flamingo",
    "prop_swiss_ball_01",
    "prop_air_bigradar_l1",
    "prop_air_bigradar_l2",
    "prop_air_bigradar_slod",
    "p_fib_rubble_s",
    "prop_money_bag_01",
    "p_cs_mp_jet_01_s",
    "prop_poly_bag_money",
    "prop_air_radar_01",
    "hei_prop_carrier_radar_1",
    "prop_carrier_radar_1_l1",
    "prop_asteroid_01",
    "prop_xmas_ext",
    "p_oil_pjack_01_amo",
    "p_oil_pjack_01_s",
    "p_oil_pjack_02_amo",
    "p_oil_pjack_03_amo",
    "p_oil_pjack_02_s",
    "p_oil_pjack_03_s",
    "prop_aircon_l_03",
    "prop_med_jet_01",
    "p_med_jet_01_s",
    "hei_prop_carrier_jet",
    "bkr_prop_biker_bblock_huge_01",
    "bkr_prop_biker_bblock_huge_02",
    "bkr_prop_biker_bblock_huge_04",
    "bkr_prop_biker_bblock_huge_05",
    "hei_prop_heist_emp",
    "prop_weed_01",
    "prop_juicestand",
    "prop_lev_des_barge_02",
    "prop_aircon_m_04",
    "prop_mp_ramp_03",
    "ch3_12_animplane1_lod",
    "ch3_12_animplane2_lod",
    "hei_prop_hei_pic_pb_plane",
    "light_plane_rig",
    "prop_cs_plane_int_01",
    "prop_dummy_plane",
    "prop_mk_plane",
    "v_44_planeticket",
    "prop_planer_01",
    "ch3_03_cliffrocks03b_lod",
    "ch3_04_rock_lod_02",
    "csx_coastsmalrock_01_",
    "csx_coastsmalrock_02_",
    "csx_coastsmalrock_03_",
    "csx_coastsmalrock_04_",
    "mp_player_introck",
    "csx_coastsmalrock_05_",
    "mp_player_int_rock",
    "mp_player_introck",
    "prop_flagpole_1a",
    "prop_flagpole_2a",
    "prop_flagpole_3a",
    "prop_a4_pile_01",
    "cs2_10_sea_rocks_lod",
    "cs2_11_sea_marina_xr_rocks_03_lod",
    "prop_gold_cont_01",
    "prop_hydro_platform",
    "ch3_04_viewplatform_slod",
    "ch2_03c_rnchstones_lod",
    "proc_mntn_stone01",
    "prop_beachflag_le",
    "proc_mntn_stone02",
    "cs2_10_sea_shipwreck_lod",
    "des_shipsink_02",
    "prop_dock_shippad",
    "des_shipsink_03",
    "des_shipsink_04",
    "prop_mk_flag",
    "prop_mk_flag_2",
    "proc_mntn_stone03",
    "FreeModeMale01",
    "rsn_os_specialfloatymetal_n",
    "rsn_os_specialfloatymetal",
    "cs1_09_sea_ufo",
    "rsn_os_specialfloaty2_light2",
    "rsn_os_specialfloaty2_light",
    "rsn_os_specialfloaty2",
    "rsn_os_specialfloatymetal_n",
    "rsn_os_specialfloatymetal",
    "P_Spinning_Anus_S_Main",
    "P_Spinning_Anus_S_Root",
    "cs3_08b_rsn_db_aliencover_0001cs3_08b_rsn_db_aliencover_0001_a",
    "sc1_04_rnmo_paintoverlaysc1_04_rnmo_paintoverlay_a",
    "rnbj_wallsigns_0001",
    "proc_sml_stones01",
    "proc_sml_stones02",
    "maverick",
    "Miljet",
    "proc_sml_stones03",
    "proc_stones_01",
    "proc_stones_02",
    "proc_stones_03",
    "proc_stones_04",
    "proc_stones_05",
    "proc_stones_06",
    "prop_container_05a",
    "prop_coral_stone_03",
    "prop_coral_stone_04",
    "prop_gravestones_01a",
    "prop_gravestones_02a",
    "prop_gravestones_03a",
    "prop_gravestones_04a",
    "prop_gravestones_05a",
    "prop_gravestones_06a",
    "prop_gravestones_07a",
    "prop_gravestones_08a",
    "prop_gravestones_09a",
    "prop_gravestones_10a",
    "prop_prlg_gravestone_05a_l1",
    "prop_prlg_gravestone_06a",
    "test_prop_gravestones_04a",
    "test_prop_gravestones_05a",
    "test_prop_gravestones_07a",
    "test_prop_gravestones_08a",
    "test_prop_gravestones_09a",
    "prop_prlg_gravestone_01a",
    "prop_prlg_gravestone_02a",
    "prop_prlg_gravestone_03a",
    "prop_prlg_gravestone_04a",
    "prop_stoneshroom1",
    "prop_stoneshroom2",
    "v_res_fa_stones01",
    "test_prop_gravestones_01a",
    "test_prop_gravestones_02a",
    "prop_prlg_gravestone_05a",
    "stt_prop_stunt_tube_l",
    "stt_prop_stunt_track_dwuturn",
    "p_spinning_anus_s",
    "prop_windmill_01",
    "hei_prop_heist_tug",
    "prop_air_bigradar",
    "p_oil_slick_01",
    "prop_dummy_01",
    "hei_prop_heist_emp",
    "p_tram_cash_s",
    "hw1_blimp_ce2",
    "prop_fire_exting_1a",
    "prop_fire_exting_1b",
    "prop_fire_exting_2a",
    "prop_fire_exting_3a",
    "hw1_blimp_ce2_lod",
    "hw1_blimp_ce_lod",
    "hw1_blimp_cpr003",
    "hw1_blimp_cpr_null",
    "hw1_blimp_cpr_null2",
    "prop_lev_des_barage_02",
    "hei_prop_carrier_defense_01",
    "prop_juicestand",
    "CS_Orleans",
    "v_ilev_found_cranebucket",
    "p_cs_sub_hook_01_s",
    "hei_prop_heist_hook_01",
    "prop_rope_hook_01",
    "prop_sub_crane_hook",
    "prop_vehicle_hook",
    "prop_v_hook_s",
    "prop_dock_crane_02_hook",
    "prop_winch_hook_long",
    "prop_coathook_01",
    "prop_cs_sub_hook_01",
    "CS_Orleans",
    "prop_windmill_01",
    "prop_Ld_ferris_wheel",
    "p_tram_crash_s",
    "p_oil_slick_01",
    "p_ld_soc_ball_01",
    "p_parachute1_s",
    "prop_beach_fire",
    "prop_lev_des_barge_01",
    "prop_sculpt_fix",
    "prop_flagpole_2b",
    "prop_flagpole_2c",
    "prop_winch_hook_short",
    "prop_flag_canada",
    "prop_flag_canada_s",
    "prop_flag_eu",
    "prop_flag_eu_s",
    "prop_flag_france",
    "prop_flag_france_s",
    "prop_flag_german",
    "prop_ld_hook",
    "prop_flag_german_s",
    "prop_flag_ireland",
    "prop_flag_ireland_s",
    "prop_flag_japan",
    "prop_flag_japan_s",
    "prop_flag_ls",
    "prop_flag_lsfd",
    "prop_flag_lsfd_s",
    "prop_cable_hook_01",
    "prop_flag_lsservices",
    "prop_flag_lsservices_s",
    "prop_flag_ls_s",
    "prop_flag_mexico",
    "prop_flag_mexico_s",
    "csx_coastboulder_00",
    "des_tankercrash_01",
    "des_tankerexplosion_01",
    "des_tankerexplosion_02",
    "des_trailerparka_02",
    "des_trailerparkb_02",
    "des_trailerparkc_02",
    "des_trailerparkd_02",
    "des_traincrash_root2",
    "des_traincrash_root3",
    "des_traincrash_root4",
    "des_traincrash_root5",
    "des_finale_vault_end",
    "des_finale_vault_root001",
    "des_finale_vault_root002",
    "des_finale_vault_root003",
    "des_finale_vault_root004",
    "des_finale_vault_start",
    "des_vaultdoor001_root001",
    "des_vaultdoor001_root002",
    "des_vaultdoor001_root003",
    "des_vaultdoor001_root004",
    "des_vaultdoor001_root005",
    "des_vaultdoor001_root006",
    "des_vaultdoor001_skin001",
    "des_vaultdoor001_start",
    "des_traincrash_root6",
    "prop_ld_vault_door",
    "prop_vault_door_scene",
    "prop_vault_door_scene",
    "prop_vault_shutter",
    "p_fin_vaultdoor_s",
    "prop_gold_vault_fence_l",
    "prop_gold_vault_fence_r",
    "prop_gold_vault_gate_01",
    "des_traincrash_root7",
    "prop_flag_russia",
    "prop_flag_russia_s",
    "prop_flag_s",
    "ch2_03c_props_rrlwindmill_lod",
    "prop_flag_sa",
    "prop_flag_sapd",
    "prop_flag_sapd_s",
    "prop_flag_sa_s",
    "prop_flag_scotland",
    "prop_flag_scotland_s",
    "prop_flag_sheriff",
    "prop_flag_sheriff_s",
    "prop_flag_uk",
    "marina_xr_rocks_02",
    "marina_xr_rocks_03",
    "prop_test_rocks01",
    "prop_test_rocks02",
    "prop_test_rocks03",
    "prop_test_rocks04",
    "marina_xr_rocks_04",
    "marina_xr_rocks_05",
    "marina_xr_rocks_06",
    "csx_searocks_02",
    "csx_searocks_03",
    "csx_searocks_04",
    "csx_searocks_05",
    "csx_searocks_06",
    "csx_coastboulder_00",
    "csx_coastboulder_01",
    "csx_coastboulder_02",
    "csx_coastboulder_03",
    "csx_coastboulder_04",
    "csx_coastboulder_05",
    "csx_coastboulder_06",
    "csx_coastboulder_07",
    "csx_coastrok1",
    "csx_coastrok2",
    "csx_coastrok3",
    "csx_coastrok4",
    "csx_coastsmalrock_01",
    "csx_coastsmalrock_02",
    "csx_coastsmalrock_03",
    "csx_coastsmalrock_04",
    "csx_coastsmalrock_05",
    "prop_flag_uk_s",
    "prop_flag_us",
    "prop_flag_usboat",
    "prop_flag_us_r",
    "prop_flag_us_s",
    "p_gasmask_s",
    "prop_flamingo",
    "ar_prop_ar_stunt_block_01a",
    "ar_prop_ar_stunt_block_01b",
    -- Fallout Menu
    "prop_mp_spike_01",
    "prop_container_ld2",
    "lts_prop_lts_ramp_03",
    "prop_jetski_ramp_01",
    "prop_mp_ramp_03_tu",
    "prop_skate_flatramp_cr",
    "prop_const_fence03b_cr",
    "prop_const_fence02b",
    "prop_const_fence03a_cr",
    "prop_fnc_farm_01e",
    "prop_fnccorgm_02c",
    "ch3_01_dino",
    "p_pallet_02a_s",
    "prop_conc_blocks01a",
    "hei_prop_cash_crate_half_full",
    "prop_consign_01a",
    "prop_mb_cargo_04b",
    "prop_mb_crate_01a_set",
    "prop_pipe_stack_01",
    "prop_rub_cage01b",
    "prop_sign_road_01a",
    "prop_sign_road_03m",
    "prop_traffic_rail_2",
    "prop_traffic_rail_1a",
    "prop_traffic_03a",
    "prop_traffic_01d",
    "prop_skid_trolley_1",
    "hei_prop_yah_seat_03",
    "hei_prop_yah_table_03",
    "lts_prop_lts_elecbox_24",
    "p_airdancer_01_s",
    "p_dumpster_t",
    "p_ld_coffee_vend_01",
    "p_patio_lounger1_s",
    "p_yacht_sofa_01_s",
    "prop_air_bagloader2_cr",
    "prop_air_blastfence_01",
    "prop_air_stair_01",
    "prop_air_sechut_01",
    "prop_airport_sale_sign",
    "hei_prop_carrier_cargo_02a",
    "p_ferris_car_01",
    "prop_rock_4_big2",
    "prop_steps_big_01",
    "v_ilev_lest_bigscreen",
    "prop_carcreeper",
    "apa_mp_h_bed_double_09",
    "apa_mp_h_bed_wide_05",
    "prop_cattlecrush",
    "prop_cs_documents_01",
    "prop_ferris_car_01_lod1",
    "prop_construcionlamp_01",
    "prop_fncconstruc_01d",
    "prop_fncconstruc_02a",
    "p_dock_crane_cabl_s",
    "prop_dock_crane_01",
    "prop_dock_crane_02_cab",
    "prop_dock_float_1",
    "prop_dock_crane_lift",
    "apa_mp_h_bed_double_08",
    "csx_seabed_bldr4_",
    "imp_prop_impexp_sofabed_01a",
    "apa_mp_h_yacht_bed_01",
    "stt_prop_stunt_bowling_ball",
    "prop_fnclink_03a",
    -- Gigantic - Huge (Plebmastwer)
    "prop_towercrane_01a",
    "prop_towercrane_02d",
    "v_11_abbdoorstop",
    "prop_oil_derrick_01",
    "prop_pylon_01",
    "prop_pylon_02",
    "prop_pylon_03",
    "prop_pylon_04",
    "prop_big_cin_screen",
    "p_ferris_wheel_amo_l",
    "p_ferris_wheel_amo_l2",
    "p_ferris_wheel_amo_p",
    "prop_cargo_int",
    -- Tiago Menu
    "prop_contnr_pile_01a",
    "ce_xr_ctr2",
    "prop_parking_hut_2",
    "csx_seabed_rock3_",
    "sr_prop_spec_tube_xxs_01a",
    "prop_start_gate_01",
    "prop_trailer_01_new",
    "sr_prop_sr_track_block_01",
    "sr_prop_spec_tube_xxs_04a",
    -- D0pamine
    "prop_gas_tank_01a",
    "prop_gascyl_01a",
    "prop_cs_dildo_01",
    "prop_ld_toilet_01",
    "prop_ld_bomb_anim",
    "prop_ld_farm_couch01",
    "p_crahsed_heli_s",
    -- Abs
    "hei_prop_heist_magnet",
    "ind_prop_dlc_roller_car",
    "lts_prop_lts_elecbox_24b",
    "lts_prop_lts_ramp_01",
    "lts_prop_lts_ramp_02",
    "lts_prop_lts_ramp_03",
    "hei_prop_heist_apecrate",
    "prop_bush_lrg_01c_cr",
    "xm_prop_x17_sub",
    -- Flags
    "prop_flag_canada",
    "prop_flag_eu",
    "prop_flag_france",
    "prop_flag_german",
    "prop_flag_ireland",
    "prop_flag_japan",
    "prop_flag_ls",
    "prop_flag_lsfd",
    "prop_flag_lsservices",
    "prop_flag_mexico",
    "prop_flag_russia",
    "prop_flag_sa",
    "prop_flag_sapd",
    "prop_flag_scotland",
    "prop_flag_sheriff",
    "prop_flag_uk",
    "prop_flag_us",
    "prop_golfflag",
    "prop_rock_1_c",
    "mp_player_introck",
    "apa_prop_flag_canadat_yt",
    "stt_prop_race_start_line_03b",
    "apa_prop_flag_france",
    "apa_prop_flag_brazil",
    "prop_aircon_l_03",
    "ch2_03c_props_rrlwindmill_lod",
    "apa_mp_h_yacht_armchair_03",
    "prop_flag_ls",
    "apa_mp_h_yacht_sofa_02",
    "prop_flag_canada_s",
    "apa_mp_apa_yacht_option3_cold",
    "apa_mp_h_yacht_floor_lamp_01",
    "proc_mntn_stone01",
    "stt_prop_ramp_spiral_s",
    "stt_prop_ramp_spiral_l_m",
    "apa_prop_flag_wales",
    "stt_prop_race_start_line_01",
    "apa_mp_h_yacht_bed_02",
    "prop_flag_canada",
    "stt_prop_ramp_adj_flip_sb",
    "apa_prop_flag_slovenia",
    "apa_mp_h_yacht_barstool_01",
    "prop_flagpole_2a",
    "apa_prop_flag_eu_yt",
    "apa_mp_h_yacht_",
    "stt_prop_ramp_spiral_l_s",
    "stt_prop_ramp_spiral_l",
    "stt_prop_stunt_domino",
    "prop_player_gasmask",
    "prop_test_boulder_03",
    "stt_prop_stunt_jump_mb",
    "stt_prop_stunt_tube_fn_04",
    "prop_flag_ls_s",
    "apa_prop_flag_china",
    "prop_beach_fire",
    "apa_prop_flag_portugal",
    "prop_flag_us_r",
    "apa_mp_h_yacht_coffee_table_02",
    "prop_flag_mexico_s",
    "apa_mp_apa_yacht_option2_colb",
    "apa_prop_flag_southkorea",
    "apa_mp_h_yacht_table_lamp_03",
    "apa_prop_flag_israel",
    "stt_prop_ramp_spiral_l_xxl",
    "apa_mp_apa_yacht_option1",
    "prop_ld_ferris_wheel",
    "apa_prop_flag_denmark",
    "apa_prop_yacht_glass_06",
    "xs_prop_plastic_bottle_wl",
    "prop_flag_eu_s",
    "apa_mp_apa_yacht_door2",
    "stt_prop_stunt_tube_fn_01",
    "apa_prop_flag_script",
    "apa_prop_flag_german_yt",
    "prop_test_boulder_01",
    "apa_mp_apa_yacht_o1_rail_b",
    "prop_target_purp_arrow",
    "prop_flagpole_2c",
    "prop_flag_columbia",
    "apa_prop_yacht_glass_07",
    "prop_flagpole_2b",
    "stt_prop_stunt_tube_fn_02",
    "apa_mp_h_yacht_table_lamp_02",
    "prop_flag_sa_s",
    "prop_juicestand",
    "prop_knife",
    "prop_gas_05",
    "stt_prop_stunt_track_start",
    "prop_cs_dog_lead_2a",
    "prop_beware_dog_sign",
    "p_crahsed_heli_s",
    "p_airdancer_01_s",
    "prop_bikini_disp_03",
    "imp_prop_impexp_half_cut_rack_01b",
    "csx_coastsmalrock_05_",
    "stt_prop_stunt_track_dwslope15",
    "stt_prop_ramp_jump_xxl",
    "apa_mp_h_yacht_table_lamp_01",
    "apa_mp_apa_yacht_o1_rail_a",
    "apa_prop_flag_austria",
    "prop_rock_4_big2",
    "apa_prop_yacht_float_1a",
    "apa_mp_apa_yacht_o2_rail_a",
    "prop_flag_lsservices_s",
    "prop_flag_us",
    "prop_bank_vaultdoor",
    "prop_flag_german",
    "apa_prop_flag_switzerland",
    "ch2_03c_rnchstones_lod",
    "prop_flagpole_3a",
    "p_spinning_anus_s",
    "prop_flag_japan_s",
    "apa_prop_flag_ireland",
    "apa_mp_apa_yacht_o2_rail_b",
    "apa_mp_apa_yacht",
    "prop_container_05a",
    "stt_prop_ramp_spiral_l_l",
    "prop_fnclink_05crnr1",
    "stt_prop_stunt_track_dwlink_02",
    "csx_coastboulder_00",
    "des_tankercrash_01",
    "apa_mp_apa_yacht_option3",
    "stt_prop_stunt_soccer_goal",
    "stt_prop_stunt_soccer_lball",
    "prop_asteroid_01",
    "apa_mp_apa_yacht_jacuzzi_cam",
    "prop_flag_france_s",
    "apa_mp_h_yacht_strip_chair_01",
    "prop_flag_sheriff",
    "prop_cable_hook_01",
    "prop_rock_1_e",
    "prop_crashed_heli",
    "apa_prop_flag_japan_yt",
    "apa_mp_apa_yacht_o3_rail_a",
    "apa_mp_apa_yacht_option3_colc",
    "apa_prop_flag_spain",
    "apa_mp_h_yacht_coffee_table_01",
    "prop_target_blue_arrow",
    "apa_mp_h_yacht_stool_01",
    "prop_flagpole_1a",
    "apa_prop_yacht_glass_08",
    "apa_prop_flag_scotland_yt",
    "apa_prop_flag_croatia",
    "prop_rock_1_f",
    "stt_prop_ramp_multi_loop_rb",
    "prop_test_boulder_04",
    "apa_mp_apa_yacht_option3_colb",
    "prop_flag_scotland_s",
    "apa_prop_yacht_glass_09",
    "prop_target_red_arrow",
    "stt_prop_ramp_adj_hloop",
    "apa_prop_flag_jamaica",
    "prop_rock_1_g",
    "des_tankerexplosion_01",
    "stt_prop_ramp_adj_flip_m",
    "apa_mp_h_yacht_armchair_04",
    "prop_flag_sapd",
    "stt_prop_stunt_tube_fn_03",
    "apa_prop_flag_russia_yt",
    "prop_flag_mexico",
    "xs_prop_hamburgher_wl",
    "prop_rock_1_b",
    "prop_flag_france",
    "stt_prop_stunt_soccer_ball",
    "prop_gold_cont_01",
    "apa_prop_flag_canada_yt",
    "apa_prop_flag_uk_yt",
    "apa_mp_apa_yacht_option2_cola",
    "stt_prop_ramp_jump_s",
    "apa_mp_apa_yacht_option3_cole",
    "des_trailerparka_02",
    "prop_flag_german_s",
    "stt_prop_ramp_spiral_xxl",
    "prop_flag_japan",
    "apa_prop_flag_england",
    "apa_prop_flag_nigeria",
    "apa_mp_h_yacht_bed_01",
    "apa_prop_flag_hungary",
    "prop_a4_pile_01",
    "prop_container_03b",
    "sr_prop_spec_tube_xxs_01a",
    "apa_mp_h_yacht_side_table_01",
    "prop_flag_lsservices",
    "apa_prop_yacht_glass_04",
    "stt_prop_ramp_adj_flip_s",
    "prop_const_fence03b_cr",
    "des_shipsink_02",
    "prop_flag_lsfd",
    "stt_prop_stunt_jump_lb",
    "apa_mp_apa_yacht_option2",
    "stt_prop_ramp_adj_flip_mb",
    "apa_prop_flag_poland",
    "apa_prop_flag_us_yt",
    "prop_flag_ireland_s",
    "apa_prop_flag_netherlands",
    "stt_prop_stunt_bowling_ball",
    "prop_xmas_tree_int",
    "stt_prop_stunt_jump_loop",
    "apa_prop_flag_mexico_yt",
    "prop_flamingo",
    "prop_windmill_01",
    "apa_mp_h_yacht_side_table_02",
    "prop_flag_s",
    "apa_mp_h_yacht_armchair_01",
"prop_flag_russia_s",
"apa_mp_h_yacht_sofa_01",
    "prop_mp_ramp_03",
    "prop_const_fence02b",
    "p_crahsed_heli_s",
    "stt_prop_race_tannoy",
    "stt_prop_race_start_line_03",
    "stt_prop_race_start_line_02b",
    "stt_prop_ramp_adj_loop",
    "stt_prop_race_start_line_02",
    "prop_rock_1_d",
    "des_traincrash_root7",
    "stt_prop_race_gantry_01",
    "stt_prop_track_stop_sign",
    "prop_shamal_crash",
    "stt_prop_stunt_tube_jmp2",
    "stt_prop_ramp_jump_m",
    "stt_prop_stunt_track_dwslope30",
    "apa_mp_apa_yacht_option1_cola",
    "prop_test_boulder_02",
    "prop_flag_eu",
    "stt_prop_stunt_track_dwshort",
    "stt_prop_stunt_track_dwsh15",
    "stt_prop_stunt_track_dwlink",
    "apa_mp_apa_crashed_usaf_01a",
    "stt_prop_stunt_track_cutout",
    "stt_prop_stunt_track_bumps",
    "stt_prop_stunt_target_small",
    "stt_prop_ramp_spiral_m",
    "ch3_04_viewplatform_slod",
    "apa_mp_apa_yacht_jacuzzi_ripple003",
    "apa_prop_flag_puertorico",
    "stt_prop_stunt_landing_zone_01",
    "stt_prop_stunt_jump_sb",
    "apa_prop_flag_lstein",
    "apa_prop_flag_turkey",
    "stt_prop_stunt_jump_s",
    "stt_prop_stunt_jump_m",
    "stt_prop_stunt_jump_l",
    "stt_prop_stunt_jump45",
    "stt_prop_stunt_jump30",
    "des_tankerexplosion_02",
    "stt_prop_stunt_tube_fn_05",
    "cs2_10_sea_shipwreck_lod",
    "stt_prop_stunt_bowling_pin",
    "stt_prop_race_start_line_01b",
    "prop_gold_vault_gate_01",
    "apa_prop_flag_malta",
    "stt_prop_ramp_jump_xs",
    "apa_mp_apa_yacht_door",
    "prop_flag_uk_s",
    "apa_prop_flag_columbia",
    "prop_gold_vault_fence_l",
    "apa_prop_flag_southafrica",
    "des_trailerparkb_02",
    "stt_prop_stunt_jump15",
    "stt_prop_stunt_soccer_sball",
    "mp_player_int_rock",
    "prop_beachflag_le",
    "stt_prop_stunt_target",
    "apa_prop_flag_finland",
    "prop_hydro_platform",
    "apa_mp_apa_yacht_win",
    "apa_mp_apa_yacht_option3_cola",
    "cs2_11_sea_marina_xr_rocks_03_lod",
    "prop_flag_sapd_s",
    "apa_prop_flag_italy",
    "proc_mntn_stone02",
    "apa_prop_flag_newzealand",
    "apa_prop_yacht_glass_05",
    "prop_flag_scotland",
    "prop_flag_russia",
    "ex_prop_exec_crashdp",
    "prop_flag_sa",
    "prop_flag_lsfd_s",
    "apa_prop_flag_norway",
    "prop_flag_uk",
    "prop_flag_us_s",
    "prop_flag_usboat",
    "prop_gold_vault_fence_r",
    "prop_flag_ireland",
    "apa_prop_flag_sweden",
    "apa_prop_flag_slovakia",
    "stt_prop_ramp_jump_xl",
    "stt_prop_stunt_ramp",
    "apa_prop_flag_palestine",
    "apa_mp_apa_yacht_jacuzzi_ripple1",
    "cs2_10_sea_rocks_lod",
    "proc_searock_01",
    "apa_prop_flag_czechrep",
    "apa_prop_flag_belgium",
    "apa_prop_flag_australia",
    "apa_prop_flag_argentina",
    "prop_target_orange_arrow",
    "apa_prop_yacht_glass_10",
    "prop_flag_sheriff_s",
    "apa_prop_yacht_glass_03",
    "apa_prop_yacht_glass_02",
    "apa_prop_yacht_glass_01",
    "apa_prop_yacht_float_1b",
    "xm_prop_x17_shamal_crash",
    "apa_mp_apa_yacht_radar_01a",
    "apa_mp_apa_yacht_jacuzzi_ripple2",
    "apa_mp_apa_yacht_o3_rail_b",
    "cargoplane",
    "prop_rock_1_h",
    "prop_rock_1_a",
    "stt_prop_ramp_jump_l",
    "ch2_lod4_s3a",
    "ch2_lod4_s3b",
    "ch2_lod4_s3c",
    "ch2_lod_emissive_slod3",
    "ch2_lod_slod3",
    "ch2_lod2_emissive_slod3",
    "ch2_12_woodstruct04_lod",
    "ch2_12_housesupport02_lod",
    "ch2_12_housesupport01_lod",
    "bt1_04_mall_emit_slod",
    "ch1_lod_slod3a",
    "ch1_lod_slod3b",
    "ch1_lod_slod3c",
    "ch1_lod_slod3d",
    "ch1_lod_slod3e",
    "ch1_lod_ch1_04b_water01_slod3",
    "ch1_lod_ch1_05_crkwater_slod3",
    "ch1_lod_ch1_05_water_slod3",
    "ch2_lod2_slod3",
    "ch2_lod3_slod3",
    "ch2_lod_emissive_slod3",
    "ch2_lod_slod3",
    "ch3_lod_101114b_slod3",
    "ch3_lod_11b13_slod3",
    "ch3_lod_1414b2_slod3",
    "ch3_lod_1_2_slod3",
 "ch3_lod_3_4_slod3",   
    "ch3_lod_6_10_slod3",
    "ch3_lod_789_12_slod3",
    "ch3_lod_emissive1_slod3",
    "ch3_lod_emissive3_slod3",
    "ch3_lod_emissive_slod3",
    "ch3_lod_water_slod3",
    "ch3_lod_weir_01_slod3",
    "cs1_02_cbf1slod",
    "cs1_02_milo2_slod1",
    "cs1_09_sea_11_00_lod",
    "cs1_09_sea_11_01_lod",
    "cs1_09_sea_11_02_lod",
    "cs1_09_sea_11_03_lod",
    "cs1_09_sea_11_04_lod",
    "cs1_lod2_01_7_slod3",
    "cs1_lod2_09_slod3",
    "cs1_lod2_emissive_slod3",
    "cs1_lod3_terrain_slod3_01",
    "cs1_lod3_terrain_slod3_02",
    "cs1_lod3_terrain_slod3_03",
    "cs1_lod3_terrain_slod3_04",
    "cs1_lod3_terrain_slod3_05",
    "cs1_lod3_terrain_slod3_06",
    "cs1_lod_08_slod3",
    "cs1_lod_14b_slod3",
    "cs1_lod_14_slod3",
    "cs1_lod_15b_slod3",
    "cs1_lod_15c_slod3",
    "cs1_lod_15_slod3",
    "cs1_lod_16_slod3",
    "cs1_lod_riva_slod3",
    "cs1_lod_rivb_slod3",
    "cs1_lod_roadsa_slod3",
    "cs2_10_sea_00_lod",
    "cs2_10_sea_02_lod",
    "cs2_10_sea_03_lod",
    "cs2_10_sea_04_lod",
    "cs2_10_sea_05_lod",
    "cs2_10_sea_06_lod",
    "cs2_10_sea_07_lod",
    "cs2_lod2_slod3_08",
    "cs2_lod2_slod3_10",
    "cs2_lod2_slod3_10a",
    "cs2_lod2_slod3_11",
    "cs2_lod_06_slod3",
    "cs2_lod_1234_slod3",
    "cs2_lod_5_9_slod3",
    "cs3_lod_1_slod3",
    "cs3_lod_2_slod3",
    "cs3_lod_s3_01",
    "cs3_lod_s3_05a",
    "cs3_lod_s3_06a",
    "cs3_lod_s3_06b",
    "cs3_lod_water_slod3_01",
    "cs3_lod_water_slod3_02",
    "cs3_lod_water_slod3_03",
    "cs4_lod_01_slod3",
    "cs4_lod_02_slod3",
    "cs4_lod_em_b_slod3",
    "cs4_lod_em_c_slod3",
    "cs4_lod_em_d_slod3",
    "cs4_lod_em_e_slod3",
    "cs4_lod_em_f_slod3",
    "cs4_lod_em_slod3",
    "cs5_lod_02_slod3",
    "cs5_lod_1_4_slod3",
    "cs5_lod_rd_slod3",
    "cs6_lod_slod3_01",
    "cs6_lod_slod3_02",
    "cs6_lod_slod3_03",
    "cs6_lod_slod3_04",
    "dt1_05_damage_slod",
    "dt1_05_office_lobbyfake_lod",
    "dt1_lod_slod3",
    "dt1_lod_f4_slod3",
    "dt1_lod_f3_slod3",
    "dt1_lod_f2_slod3",
    "dt1_lod_f2b_slod3",
    "dt1_lod_f1_slod3",
    "dt1_lod_f1b_slod3",
    "hei_ap1_lod_dummyobject",
    "sm_lod_slod3",
    "ss1_lod_slod3",
    "ch2_lod3_s2a",
    "ch2_lod3_slod3",
    "cs6_lod_slod2_06",
    "cs6_lod_slod2_04",
    "ch1_lod_slod2_05",
    "ch1_lod_101112_slod2",
    "ch1_lod_0106_slod2",
    "ch1_lod_0102_slod2",
    "bh1_lod_43",
    "ch2_lod_slod2e",
    "ch2_lod2_slod2d",
    "ch3_lod_07_a_slod2",
    "ch3_lod_08_b_slod2",
    "ch3_lod_1414b4_slod2",
    "ch3_lod_1414b2_slod2",
    "ch2_03d_l2_slod",
    "ch2_03d_l1_slod",
    "cs6_06_slod1_01",
    "ch2_lod4_s2c",
    "cs6_08_land_slod_c",
    "cs6_09_slod_01",
    "cs6_08_land_slod_d",
    "cs6_lod_slod2_05",
    "ch2_lod4_s2d",
    "cs6_06_slod1_02",
    "cs6_09_slod_03",
    "cs6_lod_slod2_02",
    "cs3_lod_4_slod2",
    "cs3_lod_1b_slod2",
    "cs3_lod_6_slod2",
    "cs1_lod_15c_slod2a",
    "cs3_lod_3_slod2",
    "cs1_lod_14_slod2",
    "cs1_lod_15_slod2",
    "cs1_lod_08_slod2a",
    "cs1_lod_08_slod2b",
    "cs1_lod_15c_slod2b",
    "cs1_lod_15b_slod2",
    "cs1_lod_14b_slod2",
    "cs3_lod_12_slod2",
    "cs3_lod_9_slod2",
    "cs3_lod_10_slod2",
    "cs4_lod_13_slod2",
    "cs4_lod_14_slod2",
    "cs4_lod_02_slod2",
    "ch3_lod_01_a_slod2",
    "cs6_lod_slod2_07",
    "ch3_lod_07_b_slod2",
    "ch3_lod_06c_slod2",
    "sr_prop_stunt_tube_crn2_01a",
    "sr_prop_stunt_tube_crn2_02a",
    "sr_prop_stunt_tube_crn2_03a",
    "sr_prop_stunt_tube_crn2_04a",
    "sr_prop_stunt_tube_crn2_05a",
    "sr_prop_stunt_tube_crn_15d_01a",
    "sr_prop_stunt_tube_crn_15d_02a",
    "sr_prop_stunt_tube_crn_15d_03a",
    "sr_prop_stunt_tube_crn_15d_04a",
    "sr_prop_stunt_tube_crn_15d_05a",
    "sr_prop_stunt_tube_crn_5d_01a",
    "sr_prop_stunt_tube_crn_5d_02a",
    "sr_prop_stunt_tube_crn_5d_03a",
    "sr_prop_stunt_tube_crn_5d_04a",
    "sr_prop_stunt_tube_crn_5d_05a",
    "sr_prop_stunt_tube_xs_01a",
    "sr_prop_stunt_tube_xs_02a",
    "sr_prop_stunt_tube_xs_03a",
    "sr_prop_stunt_tube_xs_04a",
    "sr_prop_stunt_tube_xs_05a",
    "bkr_prop_biker_tube_crn",
    "bkr_prop_biker_tube_crn2",
    "bkr_prop_biker_tube_cross",
    "bkr_prop_biker_tube_gap_01",
    "bkr_prop_biker_tube_gap_02",
    "bkr_prop_biker_tube_gap_03",
    "bkr_prop_biker_tube_l",
    "bkr_prop_biker_tube_m",
    "bkr_prop_biker_tube_s",
    "bkr_prop_biker_tube_xs",
    "bkr_prop_biker_tube_xxs",
    "bkr_prop_biker_bblock_cor",
    "bkr_prop_biker_bblock_cor_02",
    "bkr_prop_biker_bblock_cor_03",
    "bkr_prop_biker_bblock_huge_01",
    "bkr_prop_biker_bblock_huge_02",
    "bkr_prop_biker_bblock_huge_03",
    "bkr_prop_biker_bblock_huge_04",
    "bkr_prop_biker_bblock_huge_05",
    "bkr_prop_biker_bblock_hump_01",
    "bkr_prop_biker_bblock_hump_02",
    "bkr_prop_biker_bblock_lrg1",
    "bkr_prop_biker_bblock_lrg2",
    "bkr_prop_biker_bblock_lrg3",
    "bkr_prop_biker_bblock_mdm1",
    "bkr_prop_biker_bblock_mdm2",
    "bkr_prop_biker_bblock_mdm3",
    "bkr_prop_biker_bblock_qp",
    "bkr_prop_biker_bblock_qp2",
    "bkr_prop_biker_bblock_qp3",
    "bkr_prop_biker_bblock_sml1",
    "bkr_prop_biker_bblock_sml2",
    "bkr_prop_biker_bblock_sml3",
    "bkr_prop_biker_bblock_xl1",
    "bkr_prop_biker_bblock_xl2",
    "bkr_prop_biker_bblock_xl3",
    "bkr_prop_biker_bowlpin_stand",
}

function isSpawningProps(entity, propOnly)
    local model = GetEntityModel(entity)
    if model ~= nil then
        for i=1, #BlacklistedProps do
            local PropHash = tonumber(BlacklistedProps[i]) ~= nil and tonumber(BlacklistedProps[i]) or GetHashKey(BlacklistedProps[i])
            if PropHash == model then
                if (GetEntityPopulationType(entity) ~= 7) then
                    if propOnly then
                        return BlacklistedProps[i]
                    elseif not propOnly then
                        return true
                    end
                else
                    return false
                end
            end
        end
    end
    return false
end

RateLimit = {}    

function RateLimitCheck(source)
    if RateLimit[source] then 
        RateLimit[source] = RateLimit[source] + 1
        return RateLimit[source]
    else
        RateLimit[source] = 1
        return RateLimit[source]
    end
end

Citizen.CreateThread(function()
    while true do
        Citizen.Wait(2000)
        for k, v in pairs(RateLimit) do
            RateLimit[k] = v - 1
        end
    end
end)


---@param entity number
---@param owner number
---@param model string
---@param populationType number
---@param PLAYER_DATA table & {uuid: string, groupe: string}
AddEventHandler("entityCreating", function(entity, owner, model, populationType)
    local intSource = source
    local PLAYER = GetPlayerId(intSource)
    local owner = NetworkGetEntityOwner(entity)
    if owner then 
        local PLAYER_DATA <const> = GetPlayerId(owner)
        if PLAYER_DATA then 
            --- TEST VEHICLES
            -- print("entityCreating", entity, owner, model, GetEntityPopulationType(entity), populationType, NetworkGetNetworkIdFromEntity(entity))
            if populationType == 5 then 

            end
            local netId = NetworkGetNetworkIdFromEntity(entity)
            if netId and netId > 0 then
                _TriggerClientEvent("ac:detected:spawn", owner, netId)
            end
            if GetEntityPopulationType(entity) == 7 and GetEntityType(entity) == 2 then -- Check if it's actually a vehicle (type 2)
                -- print(RateLimitCheck(owner), "RateLimitCheck", "SPAWN VEH")
                local netId = NetworkGetNetworkIdFromEntity(entity)
                if netId and netId > 0 then
                    _TriggerClientEvent("ac:detected:spawn", owner, netId)
                    -- local message = DiscordMessage(); 
                    -- local returnMessage = ""
                    -- if DiscordId(owner) then 
                    --     local PLAYER_DATA <const> = GetPlayerId(owner)
                    --     returnMessage = PLAYER_DATA.username.." ("..PLAYER_DATA.uuid..") | Discord ID: <@"..DiscordId(owner)..">"
                    -- else
                    --     local PLAYER_DATA <const> = GetPlayerId(owner)
                    --     returnMessage = PLAYER_DATA.username.." ("..PLAYER_DATA.uuid..")"
                    -- end
                    -- message:SetMessage("**"..returnMessage.."**")
                    -- message:AddField()
                    --     :SetName("Username")
                    --     :SetValue(returnMessage);
                    -- message:AddField()
                    --     :SetName("Model")
                    --     :SetValue(model);
                    -- Discord.Send("log_spawn_entity", message);
                    -- if RateLimitCheck(owner) > 3 then
                    --     DeleteEntity(entity)
                    --     BanUUID(0, PLAYER_DATA.uuid, "SPAM SPAWN NPC", "99y")
                    -- end
                end
            end
            if isSpawningProps(entity, false) then
                local message = DiscordMessage(); 
                local returnMessage = ""
                if DiscordId(owner) then 
                    local PLAYER_DATA <const> = GetPlayerId(owner)
                    returnMessage = PLAYER_DATA.username.." ("..PLAYER_DATA.uuid..") | Discord ID: <@"..DiscordId(owner)..">"
                else
                    local PLAYER_DATA <const> = GetPlayerId(owner)
                    returnMessage = PLAYER_DATA.username.." ("..PLAYER_DATA.uuid..")"
                end
                message:SetMessage("**"..returnMessage.."**")
                message:AddField()
                    :SetName("Username")
                    :SetValue(returnMessage);
                message:AddField()
                    :SetName("Model")
                    :SetValue(model);
                Discord.Send("log_spawn_entity", message);
                if RateLimitCheck(owner) > 3 then
                    DeleteEntity(entity)
                    BanUUID(0, PLAYER_DATA.uuid, "SPAM SPAWN PROP", "99y")
                end
            end
        end
    end
end)

_RegisterServerEvent('ac:detected', function(reason)
    local intSource = source
    local PLAYER = GetPlayerId(intSource)
    if PLAYER then 
        BanUUID(0, PLAYER.uuid, reason, "99y")
    else 
        local uuid = GetPlayerUUIDBySource(tonumber(intSource))
        BanUUID(0, uuid, reason, "99y")
    end
end)

local ExplosionType_ = {
    47,
    48,
    23,
    25,
    14,
    9,
    50,
    49,
    43,
    34,
    21,
    20,
    12,
    30,
}


RegisterCallback("checkVoiceChannel", function(source)
    local inVoice = checkVoiceChannel(source, DiscordId(source))
    return inVoice
end)

_RegisterServerEvent("ac:detected:noclip", function()
    local intSource = source
    local PLAYER = GetPlayerId(intSource)
    if PLAYER then 
        --BanUUID(0, PLAYER.uuid, "cheat (ac)", "3m")
        DropPlayer(intSource, "NO CLIP DETECTED")
    else 
        local uuid = GetPlayerUUIDBySource(tonumber(intSource))
        BanUUID(0, uuid, "cheat (ac)", "3m")
    end
end)